### DOCS: User API Reference
### Base URL: {{baseUrl}}

### Authentication Required
// Most endpoints require either:
// - Cookie: jwt={token} (for browser-based auth)
// - Authorization: Bearer {token} (for API clients)

### Error Responses
// Common error formats:
// 401 Unauthorized: { "message": "Not authenticated" }
// 403 Forbidden: { "message": "Insufficient privileges" }
// 404 Not Found: { "message": "User not found" }
// 500 Server Error: { "message": "Server error", "error": "..." }
@baseUrl = http://localhost:3000

### Login (Get JWT)
# @name Login
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "student@univ.test",
  "password": "test1234"
}

### Create User
POST {{baseUrl}}/register
Content-Type: application/json

{
  "firstname": "John",
  "lastname": "Doe",
  "email": "student@univ.test",
  "password": "test1234",
  "role":"student"
}

### Get All Users
GET {{baseUrl}}/users

### Get One User
GET {{baseUrl}}/user/{{Login.response.body.user.id}}

### Update User
PATCH {{baseUrl}}/user/{{Login.response.body.user.id}}
Authorization: Bearer {{Login.response.body.token}}
Content-Type: application/json

{
  "firstname": "Jenna",
  "lastname": "Hee",
  "password": "test"
}

### Delete User
DELETE {{baseUrl}}/user/{{Login.response.body.user.id}}
Authorization: Bearer {{Login.response.body.token}}
// Renvoie une erreur server mais delete bien le user

### Test Me Endpoint
GET {{baseUrl}}/me
Cookie: jwt={{Login.response.body.token}}

### Seed Test Data
POST {{baseUrl}}/seed-test-data
Content-Type: application/json

###

GET {{baseUrl}}/courses
Content-Type: application/json
